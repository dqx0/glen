version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: glen-postgres
    environment:
      POSTGRES_DB: glen_dev
      POSTGRES_USER: glen_dev
      POSTGRES_PASSWORD: glen_dev_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U glen_dev -d glen_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database migration
  migrator:
    build:
      context: ../../tools/migrator
      dockerfile: Dockerfile
    container_name: glen-migrator
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=glen_dev
      - DB_USER=glen_dev
      - DB_PASSWORD=glen_dev_pass
      - DB_SSLMODE=disable
      - ENV=development
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  # Redis
  redis:
    image: redis:7-alpine
    container_name: glen-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ../../services/auth-service
      dockerfile: Dockerfile
    container_name: glen-auth-service
    environment:
      - PORT=8081
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=glen_dev
      - DB_USER=glen_dev
      - DB_PASSWORD=glen_dev_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-here
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # User Service
  user-service:
    build:
      context: ../../services/user-service
      dockerfile: Dockerfile
    container_name: glen-user-service
    environment:
      - PORT=8082
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=glen_dev
      - DB_USER=glen_dev
      - DB_PASSWORD=glen_dev_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Social Service
  social-service:
    build:
      context: ../../services/social-service
      dockerfile: Dockerfile
    container_name: glen-social-service
    environment:
      - PORT=8083
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=glen_dev
      - DB_USER=glen_dev
      - DB_PASSWORD=glen_dev_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ../../services/api-gateway
      dockerfile: Dockerfile
    container_name: glen-api-gateway
    environment:
      - PORT=8080
      - USER_SERVICE_URL=http://user-service:8082
      - AUTH_SERVICE_URL=http://auth-service:8081
      - SOCIAL_SERVICE_URL=http://social-service:8083
    ports:
      - "8080:8080"
    depends_on:
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      social-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: glen-frontend
    ports:
      - "3000:80"
    depends_on:
      api-gateway:
        condition: service_healthy
    environment:
      - VITE_API_URL=http://localhost:8080

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: glen-network
